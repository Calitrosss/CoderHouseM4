paths:
  /api/products:
    post:
      summary: Crea un nuevo producto
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/createProduct"
      responses:
        "201":
          description: El producto se ha creado satisfactoriamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success, error]
                    example: success
                  payload:
                    type: object
                    $ref: "#components/schemas/Products"
        "400":
          description: El producto no se ha creado debido a un error de petición
        "404":
          description: El producto no se ha creado debido a que no existe en la base de datos
        "500":
          description: El producto no se ha creado debido a un error de servidor

  /api/products?limit={limit}&page={page}&sort={sort}&query={query}:
    get:
      summary: Obtiene todos los productos
      tags:
        - Products
      parameters:
        - name: limit
          in: query
          description: Cantidad máxima de registros a solicitar por página
          schema:
            type: integer
            default: 10
        - name: page
          in: query
          description: Nro de página a mostrar de los registros solicitados
          schema:
            type: integer
            default: 1
        - name: sort
          in: query
          description: Para indicar si se desea ordenar los registros por precio ascendente o descendente
          schema:
            type: string
            enum: [asc, desc]
            default:
        - name: query
          in: query
          description: Para buscar por un campo y valor specífico (campo:valor)
          schema:
            type: string
            default:
            example: category:Huawei
      responses:
        "200":
          description: Los productos se han obtenido satisfactoriamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success, error]
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: "#components/schemas/Products"
                  totalDocs:
                    description: Total de registros en la base de datos
                    type: integer
                    example: 10
                  limit:
                    description: Cantidad máxima de registros por página
                    type: integer
                    example: 3
                  totalPages:
                    description: Cantidad total de páginas
                    type: integer
                    example: 4
                  page:
                    description: Nro. de página actual
                    type: integer
                    example: 2
                  pagingCounter:
                    description: Cantidad de páginas
                    type: integer
                    example: 4
                  hasPrevPage:
                    description: Indica si existe una página anterior a la actual
                    type: boolean
                    example: true
                  hasNextPage:
                    description: Indica si existe una página siguiente a la actual
                    type: boolean
                    example: true
                  prevPage:
                    description: Nro. dee página anterior a la actual
                    type: integer
                    example: 1
                  nextPage:
                    description: Nro. dee página siguiente a la actual
                    type: integer
                    example: 3
                  prevLink:
                    description: link a la página anterior a la actual
                    type: string
                    example: /products?limit=3&page=1&sort=&query=
                  nextLink:
                    description: link a la página anterior a la actual
                    type: string
                    example: /products?limit=3&page=3&sort=&query=
        "400":
          description: Los productos no se han obtenido debido a un error de petición
        "500":
          description: Los productos no se han obtenido debido a un error de servidor

  /api/products/{pid}:
    get:
      summary: Obtiene un producto en particular por su id
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: Id del producto que se desea solicitar
          schema:
            type: string
      responses:
        "200":
          description: El producto se ha obtenido satisfactoriamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success, error]
                    example: success
                  payload:
                    type: object
                    $ref: "#components/schemas/Products"
        "400":
          description: El producto no se ha obtenido debido a un error de petición
        "404":
          description: El producto no se ha obtenido debido a que no existe en la base de datos
        "500":
          description: El producto no se ha obtenido debido a un error de servidor

    put:
      summary: Actualiza un producto en particular por su id
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/createProduct"
      responses:
        "200":
          description: El producto se ha actualizado satisfactoriamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success, error]
                    example: success
                  payload:
                    type: string
                    example: Product ID "662060d86088e06c83761434" updated
        "400":
          description: El producto no se ha actualizado debido a un error de petición
        "404":
          description: El producto no se ha actualizado debido a que no existe en la base de datos
        "500":
          description: El producto no se ha actualizado debido a un error de servidor

    delete:
      summary: Elimina un producto en particular por su id
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: Id del producto que se desea eliminar
          schema:
            type: string
      responses:
        "200":
          description: El producto se ha eliminado satisfactoriamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success, error]
                    example: success
                  payload:
                    type: string
                    example: Product ID "662060d86088e06c83761434" deleted
        "400":
          description: El producto no se ha eliminado debido a un error de petición
        "404":
          description: El producto no se ha eliminado debido a que no existe en la base de datos
        "500":
          description: El producto no se ha eliminado debido a un error de servidor

components:
  schemas:
    Products:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado por mongo
        title:
          type: string
          description: Nombre del producto
        description:
          type: string
          description: Desccripción del produto
        code:
          type: string
          description: Código del producto
        price:
          type: number
          description: Precio del producto
        status:
          type: Boolean
          description: Estatus del producto
        stock:
          type: number
          description: Stock del producto
        category:
          type: string
          description: Categoría del producto
        thumbnails:
          type: array
          description: Listado de URLs de las imágenes del producto
        owner:
          type: string
          description: Id del creador del producto
      example:
        _id: ObjectId("65a0bdbd949c60c84708a580")
        title: Samsung Galaxy S22
        description: The Samsung Galaxy S22 is the flagship smartphone of 2023, featuring a powerful processor, stunning display, and advanced camera system.
        code: S22
        price: 999
        status: true
        stock: 97
        category: Samsung
        thumbnails: ["https://example.com/s22.jpg"]
        owner: 65da96425472ef1b39834a26

  requestBodies:
    createProduct:
      type: object
      properties:
        title:
          type: string
          description: Nombre del producto
        description:
          type: string
          description: Desccripción del produto
        code:
          type: string
          description: Código del producto
        price:
          type: number
          description: Precio del producto
        status:
          type: Boolean
          description: Estatus del producto
        stock:
          type: number
          description: Stock del producto
        category:
          type: string
          description: Categoría del producto
        thumbnails:
          type: array
          description: Listado de URLs de las imágenes del producto
      example:
        title: Samsung Galaxy S22
        description: The Samsung Galaxy S22 is the flagship smartphone of 2023, featuring a powerful processor, stunning display, and advanced camera system.
        code: S22
        price: 999
        status: true
        stock: 97
        category: Samsung
        thumbnails: ["https://example.com/s22.jpg"]
